<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MySql.Data.Entity.EF6.6.9.9.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MySqlDataEntityEF6Delegates">
            <summary>包含用于 MySql.Data.Entity.EF6 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm">
            <summary>MySql.Data.Entity.BackoffAlgorithm 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.#ctor(MySql.Data.Entity.BackoffAlgorithm)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.AllInstances.GetNextDelay">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.AllInstances.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.Constructor">
            <summary>设置 BackoffAlgorithm.BackoffAlgorithm() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.ConstructorInt32TimeSpan">
            <summary>设置 BackoffAlgorithm.BackoffAlgorithm(Int32 maxRetries, TimeSpan maxDelay) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.GetNextDelay">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithm.StaticConstructor">
            <summary>设置 BackoffAlgorithm.BackoffAlgorithm() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr1040 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.#ctor(MySql.Data.Entity.BackoffAlgorithmErr1040)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.AllInstances.GetNextDelay">
            <summary>设置 BackoffAlgorithmErr1040.GetNextDelay() 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.Constructor">
            <summary>设置 BackoffAlgorithmErr1040.BackoffAlgorithmErr1040() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1040.GetNextDelay">
            <summary>设置 BackoffAlgorithmErr1040.GetNextDelay() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1205">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr1205 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1205.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1205.#ctor(MySql.Data.Entity.BackoffAlgorithmErr1205)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1205.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1205.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1205.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1205.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1205.Constructor">
            <summary>设置 BackoffAlgorithmErr1205.BackoffAlgorithmErr1205() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1213">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr1213 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1213.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1213.#ctor(MySql.Data.Entity.BackoffAlgorithmErr1213)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1213.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1213.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1213.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1213.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1213.Constructor">
            <summary>设置 BackoffAlgorithmErr1213.BackoffAlgorithmErr1213() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1614">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr1614 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1614.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1614.#ctor(MySql.Data.Entity.BackoffAlgorithmErr1614)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1614.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1614.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1614.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1614.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr1614.Constructor">
            <summary>设置 BackoffAlgorithmErr1614.BackoffAlgorithmErr1614() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2006">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr2006 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2006.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2006.#ctor(MySql.Data.Entity.BackoffAlgorithmErr2006)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2006.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2006.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2006.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2006.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2006.Constructor">
            <summary>设置 BackoffAlgorithmErr2006.BackoffAlgorithmErr2006() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr2013 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.#ctor(MySql.Data.Entity.BackoffAlgorithmErr2013)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.AllInstances.GetNextDelay">
            <summary>设置 BackoffAlgorithmErr2013.GetNextDelay() 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.Constructor">
            <summary>设置 BackoffAlgorithmErr2013.BackoffAlgorithmErr2013() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmErr2013.GetNextDelay">
            <summary>设置 BackoffAlgorithmErr2013.GetNextDelay() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmNdb">
            <summary>MySql.Data.Entity.BackoffAlgorithmNdb 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmNdb.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmNdb.#ctor(MySql.Data.Entity.BackoffAlgorithmNdb)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmNdb.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmNdb.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmNdb.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmNdb.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimBackoffAlgorithmNdb.Constructor">
            <summary>设置 BackoffAlgorithmNdb.BackoffAlgorithmNdb() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory">
            <summary>MySql.Data.Entity.MySqlConnectionFactory 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.#ctor(MySql.Data.Entity.MySqlConnectionFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.AllInstances.CreateConnectionString">
            <summary>设置 MySqlConnectionFactory.CreateConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.Bind(System.Data.Entity.Infrastructure.IDbConnectionFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.Constructor">
            <summary>设置 MySqlConnectionFactory.MySqlConnectionFactory() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlConnectionFactory.CreateConnectionString">
            <summary>设置 MySqlConnectionFactory.CreateConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver">
            <summary>MySql.Data.Entity.MySqlDependencyResolver 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.#ctor(MySql.Data.Entity.MySqlDependencyResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.AllInstances.GetServiceTypeObject">
            <summary>设置 MySqlDependencyResolver.GetService(Type type, Object key) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.AllInstances.GetServicesTypeObject">
            <summary>设置 MySqlDependencyResolver.GetServices(Type type, Object key) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.Bind(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.Constructor">
            <summary>设置 MySqlDependencyResolver.MySqlDependencyResolver() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.GetServiceTypeObject">
            <summary>设置 MySqlDependencyResolver.GetService(Type type, Object key) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlDependencyResolver.GetServicesTypeObject">
            <summary>设置 MySqlDependencyResolver.GetServices(Type type, Object key) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlEFConfiguration">
            <summary>MySql.Data.Entity.MySqlEFConfiguration 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlEFConfiguration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlEFConfiguration.#ctor(MySql.Data.Entity.MySqlEFConfiguration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlEFConfiguration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlEFConfiguration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlEFConfiguration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlEFConfiguration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlEFConfiguration.Constructor">
            <summary>设置 MySqlEFConfiguration.MySqlEFConfiguration() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy">
            <summary>MySql.Data.Entity.MySqlExecutionStrategy 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.#ctor(MySql.Data.Entity.MySqlExecutionStrategy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.AllInstances.GetNextDelayException">
            <summary>设置 MySqlExecutionStrategy.GetNextDelay(Exception lastException) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.AllInstances.ShouldRetryOnException">
            <summary>设置 MySqlExecutionStrategy.ShouldRetryOn(Exception exception) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.Bind(System.Data.Entity.Infrastructure.IDbExecutionStrategy)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.Constructor">
            <summary>设置 MySqlExecutionStrategy.MySqlExecutionStrategy() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.GetNextDelayException">
            <summary>设置 MySqlExecutionStrategy.GetNextDelay(Exception lastException) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.ShouldRetryOnException">
            <summary>设置 MySqlExecutionStrategy.ShouldRetryOn(Exception exception) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlExecutionStrategy.StaticConstructor">
            <summary>设置 MySqlExecutionStrategy.MySqlExecutionStrategy() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext">
            <summary>MySql.Data.Entity.MySqlHistoryContext 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.#ctor(MySql.Data.Entity.MySqlHistoryContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>设置 MySqlHistoryContext.OnModelCreating(DbModelBuilder modelBuilder) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.Bind(System.Data.Entity.Infrastructure.IDbModelCacheKeyProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.ConstructorDbConnectionString">
            <summary>设置 MySqlHistoryContext.MySqlHistoryContext(DbConnection existingConnection, String defaultSchema) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlHistoryContext.OnModelCreatingDbModelBuilder">
            <summary>设置 MySqlHistoryContext.OnModelCreating(DbModelBuilder modelBuilder) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlLogger">
            <summary>MySql.Data.Entity.MySqlLogger 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlLogger.#ctor(MySql.Data.Entity.MySqlLogger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlLogger.AllInstances.WriteCharArrayInt32Int32">
            <summary>设置 MySqlLogger.Write(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlLogger.AllInstances.WriteString">
            <summary>设置 MySqlLogger.Write(String value) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlLogger.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlLogger.ConstructorActionOfString">
            <summary>设置 MySqlLogger.MySqlLogger(Action`1&lt;String&gt; action) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlLogger.LoggerStringBoolean">
            <summary>设置 MySqlLogger.Logger(String logPath, Boolean append) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlLogger.WriteCharArrayInt32Int32">
            <summary>设置 MySqlLogger.Write(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlLogger.WriteString">
            <summary>设置 MySqlLogger.Write(String value) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver">
            <summary>MySql.Data.Entity.MySqlManifestTokenResolver 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.#ctor(MySql.Data.Entity.MySqlManifestTokenResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.AllInstances.ResolveManifestTokenDbConnection">
            <summary>设置 MySqlManifestTokenResolver.ResolveManifestToken(DbConnection connection) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.Bind(System.Data.Entity.Infrastructure.IManifestTokenResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.Constructor">
            <summary>设置 MySqlManifestTokenResolver.MySqlManifestTokenResolver() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlManifestTokenResolver.ResolveManifestTokenDbConnection">
            <summary>设置 MySqlManifestTokenResolver.ResolveManifestToken(DbConnection connection) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator">
            <summary>MySql.Data.Entity.MySqlMigrationCodeGenerator 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.#ctor(MySql.Data.Entity.MySqlMigrationCodeGenerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateAddColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddColumnOperation addColumnOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateAddForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateAddPrimaryKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateAlterColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AlterColumnOperation alterColumnOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateCreateIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(CreateIndexOperation createIndexOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateCreateTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(CreateTableOperation createTableOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateDropColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropColumnOperation dropColumnOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateDropForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateDropIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropIndexOperation dropIndexOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateDropPrimaryKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateDropTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropTableOperation dropTableOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateInlineAddForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.GenerateInline(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateInlineCreateIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.GenerateInline(CreateIndexOperation createIndexOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateMoveTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(MoveTableOperation moveTableOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateRenameColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(RenameColumnOperation renameColumnOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateRenameTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(RenameTableOperation renameTableOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.PrepareSqlStringBoolean">
            <summary>设置 MySqlMigrationCodeGenerator.PrepareSql(String sql, Boolean removeNonMySqlChars) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.ReorderOperationsIEnumerableOfMigrationOperation">
            <summary>设置 MySqlMigrationCodeGenerator.ReorderOperations(IEnumerable`1&lt;MigrationOperation&gt; operations) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.AllInstances.TrimSchemaPrefixString">
            <summary>设置 MySqlMigrationCodeGenerator.TrimSchemaPrefix(String table) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.Constructor">
            <summary>设置 MySqlMigrationCodeGenerator.MySqlMigrationCodeGenerator() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateAddColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddColumnOperation addColumnOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateAddForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateAddPrimaryKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateAlterColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AlterColumnOperation alterColumnOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateCreateIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(CreateIndexOperation createIndexOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateCreateTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(CreateTableOperation createTableOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateDropColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropColumnOperation dropColumnOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateDropForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateDropIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropIndexOperation dropIndexOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateDropPrimaryKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateDropTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropTableOperation dropTableOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateInlineAddForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.GenerateInline(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateInlineCreateIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.GenerateInline(CreateIndexOperation createIndexOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateMoveTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(MoveTableOperation moveTableOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateRenameColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(RenameColumnOperation renameColumnOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateRenameTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(RenameTableOperation renameTableOperation, IndentedTextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.PrepareSqlStringBoolean">
            <summary>设置 MySqlMigrationCodeGenerator.PrepareSql(String sql, Boolean removeNonMySqlChars) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.ReorderOperationsIEnumerableOfMigrationOperation">
            <summary>设置 MySqlMigrationCodeGenerator.ReorderOperations(IEnumerable`1&lt;MigrationOperation&gt; operations) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationCodeGenerator.TrimSchemaPrefixString">
            <summary>设置 MySqlMigrationCodeGenerator.TrimSchemaPrefix(String table) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator">
            <summary>MySql.Data.Entity.MySqlMigrationSqlGenerator 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.#ctor(MySql.Data.Entity.MySqlMigrationSqlGenerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.BuildParamTypeParameterModel">
            <summary>设置 MySqlMigrationSqlGenerator.BuildParamType(ParameterModel param) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateAddColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddColumnOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateAddForeignKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddForeignKeyOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateAddPrimaryKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddPrimaryKeyOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateAlterColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AlterColumnOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateColumnModel">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(ColumnModel op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateCreateIndexOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateIndexOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateCreateProcedureOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateProcedureOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateCreateTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateTableOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateDropColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropColumnOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateDropForeignKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropForeignKeyOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateDropIndexOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropIndexOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateDropPrimaryKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropPrimaryKeyOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateDropTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropTableOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateHistoryOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(HistoryOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateIEnumerableOfMigrationOperationString">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateMoveTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(MoveTableOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateParamSentenceIListOfParameterModel">
            <summary>设置 MySqlMigrationSqlGenerator.GenerateParamSentence(IList`1&lt;ParameterModel&gt; Parameters) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>设置 MySqlMigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateProcedureCmdCreateProcedureOperation">
            <summary>设置 MySqlMigrationSqlGenerator.GenerateProcedureCmd(CreateProcedureOperation po) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateRenameColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(RenameColumnOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateRenameTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(RenameTableOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateSqlOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(SqlOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.GenerateUpdateDatabaseOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(UpdateDatabaseOperation updateDatabaseOperation) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.ReplaceParemetersStringRefIListOfMySqlParameter">
            <summary>设置 MySqlMigrationSqlGenerator.ReplaceParemeters(String&amp; sql, IList`1&lt;MySqlParameter&gt; parameters) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.TrimSchemaPrefixString">
            <summary>设置 MySqlMigrationSqlGenerator.TrimSchemaPrefix(String table) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._Generateb__41_0String">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;Generate&gt;b__41_0(String col) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._Generateb__41_1ColumnModel">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;Generate&gt;b__41_1(ColumnModel c) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_0MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_0(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_10MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_10(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_11MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_11(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_12MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_12(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_13MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_13(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_14MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_14(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_15MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_15(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_16MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_16(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_17MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_17(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_1MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_1(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_2MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_2(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_3MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_3(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_4MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_4(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_5MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_5(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_6MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_6(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_7MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_7(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_8MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_8(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._ctorb__22_9MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_9(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._generatedTablesGet">
            <summary>设置 MySqlMigrationSqlGenerator.get__generatedTables() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._generatedTablesSetListOfString">
            <summary>设置 MySqlMigrationSqlGenerator.set__generatedTables(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._tableNameGet">
            <summary>设置 MySqlMigrationSqlGenerator.get__tableName() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances._tableNameSetString">
            <summary>设置 MySqlMigrationSqlGenerator.set__tableName(String value) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.autoIncrementColsGet">
            <summary>设置 MySqlMigrationSqlGenerator.get_autoIncrementCols() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.autoIncrementColsSetListOfString">
            <summary>设置 MySqlMigrationSqlGenerator.set_autoIncrementCols(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.primaryKeyColsGet">
            <summary>设置 MySqlMigrationSqlGenerator.get_primaryKeyCols() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.AllInstances.primaryKeyColsSetListOfString">
            <summary>设置 MySqlMigrationSqlGenerator.set_primaryKeyCols(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.BuildParamTypeParameterModel">
            <summary>设置 MySqlMigrationSqlGenerator.BuildParamType(ParameterModel param) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.Constructor">
            <summary>设置 MySqlMigrationSqlGenerator.MySqlMigrationSqlGenerator() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateAddColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddColumnOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateAddForeignKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddForeignKeyOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateAddPrimaryKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddPrimaryKeyOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateAlterColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AlterColumnOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateColumnModel">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(ColumnModel op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateCreateIndexOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateIndexOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateCreateProcedureOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateProcedureOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateCreateTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateTableOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateDropColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropColumnOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateDropForeignKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropForeignKeyOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateDropIndexOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropIndexOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateDropPrimaryKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropPrimaryKeyOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateDropTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropTableOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateHistoryOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(HistoryOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateIEnumerableOfMigrationOperationString">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateMoveTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(MoveTableOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateParamSentenceIListOfParameterModel">
            <summary>设置 MySqlMigrationSqlGenerator.GenerateParamSentence(IList`1&lt;ParameterModel&gt; Parameters) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>设置 MySqlMigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateProcedureCmdCreateProcedureOperation">
            <summary>设置 MySqlMigrationSqlGenerator.GenerateProcedureCmd(CreateProcedureOperation po) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateRenameColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(RenameColumnOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateRenameTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(RenameTableOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateSqlOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(SqlOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.GenerateUpdateDatabaseOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(UpdateDatabaseOperation updateDatabaseOperation) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.TrimSchemaPrefixString">
            <summary>设置 MySqlMigrationSqlGenerator.TrimSchemaPrefix(String table) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._Generateb__41_0String">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;Generate&gt;b__41_0(String col) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._Generateb__41_1ColumnModel">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;Generate&gt;b__41_1(ColumnModel c) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_0MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_0(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_10MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_10(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_11MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_11(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_12MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_12(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_13MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_13(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_14MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_14(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_15MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_15(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_16MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_16(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_17MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_17(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_1MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_1(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_2MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_2(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_3MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_3(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_4MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_4(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_5MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_5(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_6MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_6(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_7MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_7(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_8MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_8(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._ctorb__22_9MigrationOperation">
            <summary>设置 MySqlMigrationSqlGenerator.&lt;.ctor&gt;b__22_9(MigrationOperation op) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._generatedTablesGet">
            <summary>设置 MySqlMigrationSqlGenerator.get__generatedTables() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._generatedTablesSetListOfString">
            <summary>设置 MySqlMigrationSqlGenerator.set__generatedTables(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._tableNameGet">
            <summary>设置 MySqlMigrationSqlGenerator.get__tableName() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator._tableNameSetString">
            <summary>设置 MySqlMigrationSqlGenerator.set__tableName(String value) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.autoIncrementColsGet">
            <summary>设置 MySqlMigrationSqlGenerator.get_autoIncrementCols() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.autoIncrementColsSetListOfString">
            <summary>设置 MySqlMigrationSqlGenerator.set_autoIncrementCols(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.primaryKeyColsGet">
            <summary>设置 MySqlMigrationSqlGenerator.get_primaryKeyCols() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlMigrationSqlGenerator.primaryKeyColsSetListOfString">
            <summary>设置 MySqlMigrationSqlGenerator.set_primaryKeyCols(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey">
            <summary>MySql.Data.Entity.MySqlModelCacheKey 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.#ctor(MySql.Data.Entity.MySqlModelCacheKey)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.AllInstances.EqualsMySqlModelCacheKey">
            <summary>设置 MySqlModelCacheKey.Equals(MySqlModelCacheKey other) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.AllInstances.EqualsObject">
            <summary>设置 MySqlModelCacheKey.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.AllInstances.GetHashCode01">
            <summary>设置 MySqlModelCacheKey.GetHashCode() 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.Bind(System.Data.Entity.Infrastructure.IDbModelCacheKey)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.ConstructorTypeStringTypeString">
            <summary>设置 MySqlModelCacheKey.MySqlModelCacheKey(Type contextType, String providerName, Type providerType, String customKey) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.EqualsMySqlModelCacheKey">
            <summary>设置 MySqlModelCacheKey.Equals(MySqlModelCacheKey other) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.EqualsObject">
            <summary>设置 MySqlModelCacheKey.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlModelCacheKey.GetHashCode">
            <summary>设置 MySqlModelCacheKey.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver">
            <summary>MySql.Data.Entity.MySqlProviderFactoryResolver 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.#ctor(MySql.Data.Entity.MySqlProviderFactoryResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.AllInstances.ResolveProviderFactoryDbConnection">
            <summary>设置 MySqlProviderFactoryResolver.ResolveProviderFactory(DbConnection connection) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.Bind(System.Data.Entity.Infrastructure.IDbProviderFactoryResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.Constructor">
            <summary>设置 MySqlProviderFactoryResolver.MySqlProviderFactoryResolver() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderFactoryResolver.ResolveProviderFactoryDbConnection">
            <summary>设置 MySqlProviderFactoryResolver.ResolveProviderFactory(DbConnection connection) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName">
            <summary>MySql.Data.Entity.MySqlProviderInvariantName 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.#ctor(MySql.Data.Entity.MySqlProviderInvariantName)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.AllInstances.NameGet">
            <summary>设置 MySqlProviderInvariantName.get_Name() 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.Bind(System.Data.Entity.Infrastructure.IProviderInvariantName)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.Constructor">
            <summary>设置 MySqlProviderInvariantName.MySqlProviderInvariantName() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.NameGet">
            <summary>设置 MySqlProviderInvariantName.get_Name() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.ShimMySqlProviderInvariantName.ProviderNameGet">
            <summary>设置 MySqlProviderInvariantName.get_ProviderName() 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubBackoffAlgorithm">
            <summary>MySql.Data.Entity.BackoffAlgorithm 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.#ctor(System.Int32,System.TimeSpan)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.GetNextDelay">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.GetNextDelay01">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.InitializeStub">
            <summary>初始化 type StubBackoffAlgorithm 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithm.Reset01">
            <summary>设置 BackoffAlgorithm.Reset() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr1040 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.GetNextDelay">
            <summary>设置 BackoffAlgorithmErr1040.GetNextDelay() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.GetNextDelay01">
            <summary>设置 BackoffAlgorithmErr1040.GetNextDelay() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.InitializeStub">
            <summary>初始化 type StubBackoffAlgorithmErr1040 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1040.Reset01">
            <summary>设置 BackoffAlgorithm.Reset() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr1205 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.GetNextDelay">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.GetNextDelay01">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.InitializeStub">
            <summary>初始化 type StubBackoffAlgorithmErr1205 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1205.Reset01">
            <summary>设置 BackoffAlgorithm.Reset() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr1213 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.GetNextDelay">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.GetNextDelay01">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.InitializeStub">
            <summary>初始化 type StubBackoffAlgorithmErr1213 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1213.Reset01">
            <summary>设置 BackoffAlgorithm.Reset() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr1614 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.GetNextDelay">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.GetNextDelay01">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.InitializeStub">
            <summary>初始化 type StubBackoffAlgorithmErr1614 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr1614.Reset01">
            <summary>设置 BackoffAlgorithm.Reset() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr2006 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.GetNextDelay">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.GetNextDelay01">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.InitializeStub">
            <summary>初始化 type StubBackoffAlgorithmErr2006 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2006.Reset01">
            <summary>设置 BackoffAlgorithm.Reset() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013">
            <summary>MySql.Data.Entity.BackoffAlgorithmErr2013 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.GetNextDelay">
            <summary>设置 BackoffAlgorithmErr2013.GetNextDelay() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.GetNextDelay01">
            <summary>设置 BackoffAlgorithmErr2013.GetNextDelay() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.InitializeStub">
            <summary>初始化 type StubBackoffAlgorithmErr2013 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmErr2013.Reset01">
            <summary>设置 BackoffAlgorithm.Reset() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb">
            <summary>MySql.Data.Entity.BackoffAlgorithmNdb 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.GetNextDelay">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.GetNextDelay01">
            <summary>设置 BackoffAlgorithm.GetNextDelay() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.InitializeStub">
            <summary>初始化 type StubBackoffAlgorithmNdb 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.Reset">
            <summary>设置 BackoffAlgorithm.Reset() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubBackoffAlgorithmNdb.Reset01">
            <summary>设置 BackoffAlgorithm.Reset() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlConnectionFactory">
            <summary>MySql.Data.Entity.MySqlConnectionFactory 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlConnectionFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlConnectionFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlConnectionFactory.InitializeStub">
            <summary>初始化 type StubMySqlConnectionFactory 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlConnectionFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlConnectionFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlDependencyResolver">
            <summary>MySql.Data.Entity.MySqlDependencyResolver 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlDependencyResolver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlDependencyResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlDependencyResolver.InitializeStub">
            <summary>初始化 type StubMySqlDependencyResolver 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlDependencyResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlDependencyResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration">
            <summary>MySql.Data.Entity.MySqlEFConfiguration 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.Equals(System.Object)">
            <summary>设置 DbConfiguration.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.EqualsObject">
            <summary>设置 DbConfiguration.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.GetHashCode">
            <summary>设置 DbConfiguration.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.GetHashCode01">
            <summary>设置 DbConfiguration.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.InitializeStub">
            <summary>初始化 type StubMySqlEFConfiguration 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.ToString">
            <summary>设置 DbConfiguration.ToString() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlEFConfiguration.ToString01">
            <summary>设置 DbConfiguration.ToString() 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy">
            <summary>MySql.Data.Entity.MySqlExecutionStrategy 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.GetNextDelay(System.Exception)">
            <summary>设置 MySqlExecutionStrategy.GetNextDelay(Exception lastException) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.GetNextDelayException">
            <summary>设置 MySqlExecutionStrategy.GetNextDelay(Exception lastException) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.InitializeStub">
            <summary>初始化 type StubMySqlExecutionStrategy 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.ShouldRetryOn(System.Exception)">
            <summary>设置 MySqlExecutionStrategy.ShouldRetryOn(Exception exception) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlExecutionStrategy.ShouldRetryOnException">
            <summary>设置 MySqlExecutionStrategy.ShouldRetryOn(Exception exception) 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlHistoryContext">
            <summary>MySql.Data.Entity.MySqlHistoryContext 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.#ctor(System.Data.Common.DbConnection,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.AttachBackingFieldToHistory">
            <summary>附加委托以将 StubMySqlHistoryContext.History 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.CacheKey">
            <summary>设置 HistoryContext.get_CacheKey() 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.CacheKeyGet">
            <summary>设置 HistoryContext.get_CacheKey() 的 stub</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.Dispose(System.Boolean)">
            <summary>设置 DbContext.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.DisposeBoolean">
            <summary>设置 DbContext.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.Equals(System.Object)">
            <summary>设置 DbContext.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.EqualsObject">
            <summary>设置 DbContext.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.GetHashCode">
            <summary>设置 DbContext.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.GetHashCode01">
            <summary>设置 DbContext.GetHashCode() 的 stub</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.History">
            <summary>设置 HistoryContext.get_History() 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.HistoryGet">
            <summary>设置 HistoryContext.get_History() 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.HistorySetIDbSetOfHistoryRow">
            <summary>设置 HistoryContext.set_History(IDbSet`1&lt;HistoryRow&gt; value) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.InitializeStub">
            <summary>初始化 type StubMySqlHistoryContext 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>设置 MySqlHistoryContext.OnModelCreating(DbModelBuilder modelBuilder) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.OnModelCreatingDbModelBuilder">
            <summary>设置 MySqlHistoryContext.OnModelCreating(DbModelBuilder modelBuilder) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.SaveChanges">
            <summary>设置 DbContext.SaveChanges() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.SaveChanges01">
            <summary>设置 DbContext.SaveChanges() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.SaveChangesAsync">
            <summary>设置 DbContext.SaveChangesAsync() 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>设置 DbContext.SaveChangesAsync(CancellationToken cancellationToken) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.SaveChangesAsync01">
            <summary>设置 DbContext.SaveChangesAsync() 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.SaveChangesAsyncCancellationToken">
            <summary>设置 DbContext.SaveChangesAsync(CancellationToken cancellationToken) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.Set(System.Type)">
            <summary>设置 DbContext.Set(Type entityType) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.Set``1">
            <summary>设置 DbContext.Set() 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>设置 Set() 的存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.SetType">
            <summary>设置 DbContext.Set(Type entityType) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>设置 DbContext.ShouldValidateEntity(DbEntityEntry entityEntry) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.ShouldValidateEntityDbEntityEntry">
            <summary>设置 DbContext.ShouldValidateEntity(DbEntityEntry entityEntry) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.ToString">
            <summary>设置 DbContext.ToString() 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.ToString01">
            <summary>设置 DbContext.ToString() 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>设置 DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlHistoryContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>设置 DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items) 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlManifestTokenResolver">
            <summary>MySql.Data.Entity.MySqlManifestTokenResolver 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlManifestTokenResolver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlManifestTokenResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlManifestTokenResolver.InitializeStub">
            <summary>初始化 type StubMySqlManifestTokenResolver 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlManifestTokenResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlManifestTokenResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator">
            <summary>MySql.Data.Entity.MySqlMigrationCodeGenerator 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.AnnotationGenerators">
            <summary>设置 MigrationCodeGenerator.get_AnnotationGenerators() 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.AnnotationGeneratorsGet">
            <summary>设置 MigrationCodeGenerator.get_AnnotationGenerators() 的 stub</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Object)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Object defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddColumnOperation addColumnOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DbGeography defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.String)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(String defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Single)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Single defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(AlterProcedureOperation alterProcedureOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DbGeometry defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AlterColumnOperation alterColumnOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(AlterTableOperation alterTableOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(CreateIndexOperation createIndexOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.DateTimeOffset)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DateTimeOffset defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.TimeSpan)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(TimeSpan defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(CreateProcedureOperation createProcedureOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropColumnOperation dropColumnOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropIndexOperation dropIndexOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DropProcedureOperation dropProcedureOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropTableOperation dropTableOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(MoveProcedureOperation moveProcedureOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(MoveTableOperation moveTableOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(RenameColumnOperation renameColumnOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(SqlOperation sqlOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.String},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;String&gt; columns, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Guid)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Guid defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(RenameIndexOperation renameIndexOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(RenameProcedureOperation renameProcedureOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(RenameTableOperation renameTableOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(ColumnModel column, IndentedTextWriter writer, Boolean emitName) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Int64)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Int64 defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ParameterModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(ParameterModel parameterModel, IndentedTextWriter writer, Boolean emitName) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.DateTime)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DateTime defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Decimal)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Decimal defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Byte[])">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Byte[] defaultValue) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(CreateTableOperation createTableOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAddColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddColumnOperation addColumnOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAddForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAddPrimaryKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAlterColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(AlterColumnOperation alterColumnOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAlterProcedureOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(AlterProcedureOperation alterProcedureOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAlterTableOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(AlterTableOperation alterTableOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAnnotation(System.String,System.Object,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.GenerateAnnotation(String name, Object annotation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAnnotationStringObjectIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.GenerateAnnotation(String name, Object annotation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAnnotations(System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.GenerateAnnotations(IDictionary`2&lt;String,AnnotationValues&gt; annotations, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAnnotations(System.Collections.Generic.IDictionary{System.String,System.Object},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.GenerateAnnotations(IDictionary`2&lt;String,Object&gt; annotations, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAnnotationsIDictionaryOfStringAnnotationValuesIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.GenerateAnnotations(IDictionary`2&lt;String,AnnotationValues&gt; annotations, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateAnnotationsIDictionaryOfStringObjectIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.GenerateAnnotations(IDictionary`2&lt;String,Object&gt; annotations, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateByteArray">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Byte[] defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateColumnModelIndentedTextWriterBoolean">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(ColumnModel column, IndentedTextWriter writer, Boolean emitName) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateCreateIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(CreateIndexOperation createIndexOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateCreateProcedureOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(CreateProcedureOperation createProcedureOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateCreateTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(CreateTableOperation createTableOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDateTime">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DateTime defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDateTimeOffset">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DateTimeOffset defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDbGeography">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DbGeography defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDbGeometry">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DbGeometry defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDecimal">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Decimal defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDropColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropColumnOperation dropColumnOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDropForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDropIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropIndexOperation dropIndexOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDropPrimaryKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDropProcedureOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(DropProcedureOperation dropProcedureOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateDropTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(DropTableOperation dropTableOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateGuid">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Guid defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateIEnumerableOfMigrationOperationStringString">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; operations, String namespace, String className) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateIEnumerableOfStringIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(IEnumerable`1&lt;String&gt; columns, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.GenerateInline(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.GenerateInline(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 MySqlMigrationCodeGenerator.GenerateInline(CreateIndexOperation createIndexOperation, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateInlineAddForeignKeyOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.GenerateInline(AddForeignKeyOperation addForeignKeyOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateInlineAddPrimaryKeyOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.GenerateInline(AddPrimaryKeyOperation addPrimaryKeyOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateInlineCreateIndexOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.GenerateInline(CreateIndexOperation createIndexOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateInt64">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Int64 defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateMoveProcedureOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(MoveProcedureOperation moveProcedureOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateMoveTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(MoveTableOperation moveTableOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateObject">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Object defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateParameterModelIndentedTextWriterBoolean">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(ParameterModel parameterModel, IndentedTextWriter writer, Boolean emitName) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateRenameColumnOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(RenameColumnOperation renameColumnOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateRenameIndexOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(RenameIndexOperation renameIndexOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateRenameProcedureOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(RenameProcedureOperation renameProcedureOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateRenameTableOperationIndentedTextWriter">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(RenameTableOperation renameTableOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateSingle">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(Single defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateSqlOperationIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(SqlOperation sqlOperation, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateString">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(String defaultValue) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateStringIEnumerableOfMigrationOperationStringStringStringString">
            <summary>设置 MySqlMigrationCodeGenerator.Generate(String migrationId, IEnumerable`1&lt;MigrationOperation&gt; operations, String sourceModel, String targetModel, String namespace, String className) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateStringStringStringStringString">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(String migrationId, String sourceModel, String targetModel, String namespace, String className) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GenerateTimeSpan">
            <summary>设置 CSharpMigrationCodeGenerator.Generate(TimeSpan defaultValue) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GetDefaultNamespaces(System.Boolean)">
            <summary>设置 MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GetDefaultNamespacesBoolean">
            <summary>设置 MigrationCodeGenerator.GetDefaultNamespaces(Boolean designer) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GetNamespaces(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation})">
            <summary>设置 MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.GetNamespacesIEnumerableOfMigrationOperation">
            <summary>设置 MigrationCodeGenerator.GetNamespaces(IEnumerable`1&lt;MigrationOperation&gt; operations) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.InitializeStub">
            <summary>初始化 type StubMySqlMigrationCodeGenerator 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.Quote(System.String)">
            <summary>设置 CSharpMigrationCodeGenerator.Quote(String identifier) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.QuoteString">
            <summary>设置 CSharpMigrationCodeGenerator.Quote(String identifier) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.ScrubName(System.String)">
            <summary>设置 CSharpMigrationCodeGenerator.ScrubName(String name) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.ScrubNameString">
            <summary>设置 CSharpMigrationCodeGenerator.ScrubName(String name) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.TranslateColumnType(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
            <summary>设置 CSharpMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.TranslateColumnTypePrimitiveTypeKind">
            <summary>设置 CSharpMigrationCodeGenerator.TranslateColumnType(PrimitiveTypeKind primitiveTypeKind) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.WriteClassAttributes(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
            <summary>设置 CSharpMigrationCodeGenerator.WriteClassAttributes(IndentedTextWriter writer, Boolean designer) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.WriteClassAttributesIndentedTextWriterBoolean">
            <summary>设置 CSharpMigrationCodeGenerator.WriteClassAttributes(IndentedTextWriter writer, Boolean designer) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.WriteClassEnd(System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.WriteClassEnd(String namespace, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.WriteClassEndStringIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.WriteClassEnd(String namespace, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.WriteClassStart(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>设置 CSharpMigrationCodeGenerator.WriteClassStart(String namespace, String className, IndentedTextWriter writer, String base, Boolean designer, IEnumerable`1&lt;String&gt; namespaces) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.WriteClassStartStringStringIndentedTextWriterStringBooleanIEnumerableOfString">
            <summary>设置 CSharpMigrationCodeGenerator.WriteClassStart(String namespace, String className, IndentedTextWriter writer, String base, Boolean designer, IEnumerable`1&lt;String&gt; namespaces) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.WriteProperty(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>设置 CSharpMigrationCodeGenerator.WriteProperty(String name, String value, IndentedTextWriter writer) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationCodeGenerator.WritePropertyStringStringIndentedTextWriter">
            <summary>设置 CSharpMigrationCodeGenerator.WriteProperty(String name, String value, IndentedTextWriter writer) 的 stub</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator">
            <summary>MySql.Data.Entity.MySqlMigrationSqlGenerator 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.BuildStoreTypeUsage(System.String,System.Data.Entity.Migrations.Model.PropertyModel)">
            <summary>设置 MigrationSqlGenerator.BuildStoreTypeUsage(String storeTypeName, PropertyModel propertyModel) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.BuildStoreTypeUsageStringPropertyModel">
            <summary>设置 MigrationSqlGenerator.BuildStoreTypeUsage(String storeTypeName, PropertyModel propertyModel) 的 stub</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddColumnOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddForeignKeyOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddPrimaryKeyOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AlterColumnOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateIndexOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateProcedureOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateTableOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropColumnOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropForeignKeyOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropIndexOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropPrimaryKeyOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropTableOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.HistoryOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(HistoryOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(MoveTableOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(RenameColumnOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(RenameTableOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(SqlOperation op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(ColumnModel op) 的 存根</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateAddColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddColumnOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateAddForeignKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddForeignKeyOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateAddPrimaryKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AddPrimaryKeyOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateAlterColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(AlterColumnOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateColumnModel">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(ColumnModel op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateCreateIndexOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateIndexOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateCreateProcedureOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateProcedureOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateCreateTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(CreateTableOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateDropColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropColumnOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateDropForeignKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropForeignKeyOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateDropIndexOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropIndexOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateDropPrimaryKeyOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropPrimaryKeyOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateDropTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(DropTableOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateHistoryOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(HistoryOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateIEnumerableOfMigrationOperationString">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateMoveTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(MoveTableOperation op) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)">
            <summary>设置 MySqlMigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken) 的 存根</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>设置 MySqlMigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateRenameColumnOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(RenameColumnOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateRenameTableOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(RenameTableOperation op) 的 stub</summary>
        </member>
        <member name="F:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.GenerateSqlOperation">
            <summary>设置 MySqlMigrationSqlGenerator.Generate(SqlOperation op) 的 stub</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.InitializeStub">
            <summary>初始化 type StubMySqlMigrationSqlGenerator 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlMigrationSqlGenerator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlModelCacheKey">
            <summary>MySql.Data.Entity.MySqlModelCacheKey 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlModelCacheKey.#ctor(System.Type,System.String,System.Type,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlModelCacheKey.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlModelCacheKey.InitializeStub">
            <summary>初始化 type StubMySqlModelCacheKey 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlModelCacheKey.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlModelCacheKey.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlProviderFactoryResolver">
            <summary>MySql.Data.Entity.MySqlProviderFactoryResolver 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlProviderFactoryResolver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlProviderFactoryResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlProviderFactoryResolver.InitializeStub">
            <summary>初始化 type StubMySqlProviderFactoryResolver 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlProviderFactoryResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlProviderFactoryResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:MySql.Data.Entity.Fakes.StubMySqlProviderInvariantName">
            <summary>MySql.Data.Entity.MySqlProviderInvariantName 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlProviderInvariantName.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlProviderInvariantName.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.Entity.Fakes.StubMySqlProviderInvariantName.InitializeStub">
            <summary>初始化 type StubMySqlProviderInvariantName 的新实例</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlProviderInvariantName.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.Entity.Fakes.StubMySqlProviderInvariantName.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices">
            <summary>MySql.Data.MySqlClient.MySqlProviderServices 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.#ctor(MySql.Data.MySqlClient.MySqlProviderServices)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.CreateDbCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>设置 MySqlProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>设置 MySqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>设置 MySqlProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>设置 MySqlProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>设置 MySqlProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.GetAssociationCreateScriptAssociationType">
            <summary>设置 MySqlProviderServices.GetAssociationCreateScript(AssociationType a) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.GetColumnTypeTypeUsage">
            <summary>设置 MySqlProviderServices.GetColumnType(TypeUsage type) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.GetDbProviderManifestString">
            <summary>设置 MySqlProviderServices.GetDbProviderManifest(String manifestToken) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.GetDbProviderManifestTokenDbConnection">
            <summary>设置 MySqlProviderServices.GetDbProviderManifestToken(DbConnection connection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.GetDbSpatialDataReaderDbDataReaderString">
            <summary>设置 MySqlProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.GetFacetStringEdmPropertyBoolean">
            <summary>设置 MySqlProviderServices.GetFacetString(EdmProperty column, Boolean IsKeyMember) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.GetTableCreateScriptEntitySet">
            <summary>设置 MySqlProviderServices.GetTableCreateScript(EntitySet entitySet) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.IsStringTypeTypeUsage">
            <summary>设置 MySqlProviderServices.IsStringType(TypeUsage type) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.serverVersionGet">
            <summary>设置 MySqlProviderServices.get_serverVersion() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.AllInstances.serverVersionSetVersion">
            <summary>设置 MySqlProviderServices.set_serverVersion(Version value) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.Bind(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.Constructor">
            <summary>设置 MySqlProviderServices.MySqlProviderServices() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.CreateDbCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>设置 MySqlProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>设置 MySqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>设置 MySqlProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>设置 MySqlProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>设置 MySqlProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.GetAssociationCreateScriptAssociationType">
            <summary>设置 MySqlProviderServices.GetAssociationCreateScript(AssociationType a) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.GetColumnTypeTypeUsage">
            <summary>设置 MySqlProviderServices.GetColumnType(TypeUsage type) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.GetDbProviderManifestString">
            <summary>设置 MySqlProviderServices.GetDbProviderManifest(String manifestToken) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.GetDbProviderManifestTokenDbConnection">
            <summary>设置 MySqlProviderServices.GetDbProviderManifestToken(DbConnection connection) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.GetDbSpatialDataReaderDbDataReaderString">
            <summary>设置 MySqlProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String manifestToken) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.GetFacetStringEdmPropertyBoolean">
            <summary>设置 MySqlProviderServices.GetFacetString(EdmProperty column, Boolean IsKeyMember) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.GetTableCreateScriptEntitySet">
            <summary>设置 MySqlProviderServices.GetTableCreateScript(EntitySet entitySet) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.IsStringTypeTypeUsage">
            <summary>设置 MySqlProviderServices.IsStringType(TypeUsage type) 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.StaticConstructor">
            <summary>设置 MySqlProviderServices.MySqlProviderServices() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.serverVersionGet">
            <summary>设置 MySqlProviderServices.get_serverVersion() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlProviderServices.serverVersionSetVersion">
            <summary>设置 MySqlProviderServices.set_serverVersion(Version value) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices">
            <summary>MySql.Data.MySqlClient.MySqlScriptServices 的填充码类型</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.#ctor(MySql.Data.MySqlClient.MySqlScriptServices)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.AllInstances.GetTableCreateScriptEntitySetStringString">
            <summary>设置 MySqlScriptServices.GetTableCreateScript(EntitySet entitySet, String connectionString, String version) 的 填充码</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.Constructor">
            <summary>设置 MySqlScriptServices.MySqlScriptServices() 的 填充码</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.ShimMySqlScriptServices.GetTableCreateScriptEntitySetStringString">
            <summary>设置 MySqlScriptServices.GetTableCreateScript(EntitySet entitySet, String connectionString, String version) 的 填充码</summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Fakes.StubMySqlScriptServices">
            <summary>MySql.Data.MySqlClient.MySqlScriptServices 的存根类型</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.StubMySqlScriptServices.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.StubMySqlScriptServices.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Fakes.StubMySqlScriptServices.InitializeStub">
            <summary>初始化 type StubMySqlScriptServices 的新实例</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.StubMySqlScriptServices.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Fakes.StubMySqlScriptServices.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
